<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">
        <!-- spring mvc容器 -->
        <!-- 注解驱动 -->
      	<mvc:annotation-driven/>
      	
      	<!-- 控制器的包 -->
      	<context:component-scan base-package="com.books.controller"></context:component-scan>
         <!-- 扫描生成service -->
         <context:component-scan base-package="com.books.service.impl"></context:component-scan>
      
      	<!-- 
      		配置数据源
      	    通过set注入完成基本连接信息的配置
      	 -->
      	 <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
      	 <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
      	 <property name="url" value="jdbc:mysql://localhost:3306/ssm"></property>
      	 <property name="username" value="root"></property>
      	 <property name="password" value="zsx199607"></property>
      	 </bean>
       <!-- 生成SqlSessionFactory -->
       <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"></property>
       <property name="mapperLocations" value="classpath:com/books/dao/*Mapper.xml"></property>
       <!-- package中的类取别名，使用简易的类名作为别名 -->
       <property name="typeAliasesPackage" value="com.books.model"></property>
       </bean>
       <!-- 生成dao对象  sqlSession.getMapper(Class)
       		不需要每个dao都配置一个bean
       		生成的bean存入容器，通过自动装配
        -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
   <property name="basePackage" value="com.books.dao"></property>
   </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      		<property name="dataSource" ref="dataSource"></property>
      </bean>
      <!-- 开启事务处理的注解 -->
      <tx:annotation-driven transaction-manager="transactionManager"/>
      
</beans>






